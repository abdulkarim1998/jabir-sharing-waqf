// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type PaymentStatus string

const (
	PaymentStatusPending    PaymentStatus = "Pending"
	PaymentStatusProcessing PaymentStatus = "Processing"
	PaymentStatusCompleted  PaymentStatus = "Completed"
	PaymentStatusFailed     PaymentStatus = "Failed"
	PaymentStatusCancelled  PaymentStatus = "Cancelled"
)

func (e *PaymentStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PaymentStatus(s)
	case string:
		*e = PaymentStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PaymentStatus: %T", src)
	}
	return nil
}

type NullPaymentStatus struct {
	PaymentStatus PaymentStatus `json:"payment_status"`
	Valid         bool          `json:"valid"` // Valid is true if PaymentStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPaymentStatus) Scan(value interface{}) error {
	if value == nil {
		ns.PaymentStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PaymentStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPaymentStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PaymentStatus), nil
}

func (e PaymentStatus) Valid() bool {
	switch e {
	case PaymentStatusPending,
		PaymentStatusProcessing,
		PaymentStatusCompleted,
		PaymentStatusFailed,
		PaymentStatusCancelled:
		return true
	}
	return false
}

func AllPaymentStatusValues() []PaymentStatus {
	return []PaymentStatus{
		PaymentStatusPending,
		PaymentStatusProcessing,
		PaymentStatusCompleted,
		PaymentStatusFailed,
		PaymentStatusCancelled,
	}
}

type GiftDetail struct {
	ID             uuid.UUID   `json:"id"`
	WaqfID         pgtype.UUID `json:"waqf_id"`
	RecipientName  *string     `json:"recipient_name"`
	RecipientEmail *string     `json:"recipient_email"`
	Message        *string     `json:"message"`
	IsAnonymous    *bool       `json:"is_anonymous"`
	CreatedDate    time.Time   `json:"created_date"`
	ModifiedDate   time.Time   `json:"modified_date"`
}

type Organization struct {
	ID           uuid.UUID `json:"id"`
	Name         string    `json:"name"`
	Location     *string   `json:"location"`
	IsActive     *bool     `json:"is_active"`
	Twitter      *string   `json:"twitter"`
	Instagram    *string   `json:"instagram"`
	Website      *string   `json:"website"`
	Description  *string   `json:"description"`
	Email        string    `json:"email"`
	Phone        *string   `json:"phone"`
	Logo         *string   `json:"logo"`
	CreatedDate  time.Time `json:"created_date"`
	ModifiedDate time.Time `json:"modified_date"`
}

type PaymentConfiguration struct {
	ID             uuid.UUID   `json:"id"`
	OrganizationID pgtype.UUID `json:"organization_id"`
	MerchantID     *string     `json:"merchant_id"`
	TerminalID     *string     `json:"terminal_id"`
	GatewayUrl     *string     `json:"gateway_url"`
	IsActive       *bool       `json:"is_active"`
	CreatedDate    time.Time   `json:"created_date"`
	ModifiedDate   time.Time   `json:"modified_date"`
}

type PaymentTrack struct {
	ID           uuid.UUID      `json:"id"`
	WaqfID       pgtype.UUID    `json:"waqf_id"`
	Ref          string         `json:"ref"`
	TrackID      string         `json:"track_id"`
	TranID       *string        `json:"tran_id"`
	Amount       pgtype.Numeric `json:"amount"`
	Result       *string        `json:"result"`
	ErrorText    *string        `json:"error_text"`
	OrderID      *int32         `json:"order_id"`
	StatusID     PaymentStatus  `json:"status_id"`
	CreatedDate  time.Time      `json:"created_date"`
	ModifiedDate time.Time      `json:"modified_date"`
}

type Project struct {
	ID             uuid.UUID      `json:"id"`
	Title          string         `json:"title"`
	Description    string         `json:"description"`
	Value          pgtype.Numeric `json:"value"`
	IsActive       *bool          `json:"is_active"`
	IsComplete     *bool          `json:"is_complete"`
	Address        *string        `json:"address"`
	OrganizationID pgtype.UUID    `json:"organization_id"`
	CreatedDate    time.Time      `json:"created_date"`
	ModifiedDate   time.Time      `json:"modified_date"`
}

type Waqf struct {
	ID            uuid.UUID      `json:"id"`
	WaqfTypeID    pgtype.UUID    `json:"waqf_type_id"`
	ProjectID     pgtype.UUID    `json:"project_id"`
	NumberOfSaham int32          `json:"number_of_saham"`
	TotalAmount   pgtype.Numeric `json:"total_amount"`
	CreatedDate   time.Time      `json:"created_date"`
	ModifiedDate  time.Time      `json:"modified_date"`
}

type WaqfType struct {
	ID           uuid.UUID      `json:"id"`
	Name         string         `json:"name"`
	Description  *string        `json:"description"`
	FixedAmount  pgtype.Numeric `json:"fixed_amount"`
	IsActive     *bool          `json:"is_active"`
	CreatedDate  time.Time      `json:"created_date"`
	ModifiedDate time.Time      `json:"modified_date"`
}
